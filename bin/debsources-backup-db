#!/bin/bash

# Copyright (C) 2014  Stefano Zacchiroli <zack@upsilon.cc>
#
# This file is part of Debsources.
#
# Debsources is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

conffile=`python -c 'from debsources.utils.conf import DebsConf; print(DebsConf.guess_conf_path())'`
if [ $? -ne 0 ]
then
    echo "Configuration file not found, aborting."
    exit 2
fi

# -----------------------------------------------------------------------

umask 0002
export LANG=C

root_dir=$(grep "^root_dir:" "$conffile" | awk '{ print $2 }')
conf_get () {
    local key="$1"
    local value=$(grep "^${key}:" "$conffile" | head -n 1 | awk '{ print $2 }')
    value=$(echo $value | sed "s|%(root_dir)s|${root_dir}|")
    value=$(echo $value | sed "s|%(log_dir)s|${log_dir}|")
    if [ -z "$value" ] ; then
	err "required configuration value $key not found in $conffile, abort."
    fi
    echo "$value"
}

bin_dir=$( conf_get "bin_dir" )
logfile=$( conf_get "log_file" )
backup_dir=$( conf_get "backup_dir" )

db_uri=$( conf_get "db_uri" )

# uses $logfile global
source "${bin_dir}/lib.sh"

PG_DUMP="pg_dump"
PG_DUMP_FLAGS="-Fc --no-password --schema public"
DUMP="debsources.dump"

# db_uri parsing, e.g. "postgresql://username:password@host/dbname"
pg_uri=${db_uri#postgresql://}	# e.g. username:password@host/dbname
pg_userpass=${pg_uri%@*}	# e.g. username:password
pg_user=${pg_userpass%:*}
pg_pass=${pg_userpass#*:}
pg_hostdbname=${pg_uri#*@}	# e.g. host/dbname
pg_host=${pg_hostdbname%/*}
pg_dbname=${pg_hostdbname#*/}

main () {
    info "starting at $(date)"
    info "dumping DB to ${backup_dir}/${DUMP} ..."

    export PGPASSWORD="$pg_pass"
    $PG_DUMP $PG_DUMP_FLAGS --host $pg_host --username $pg_user \
	$pg_dbname > ${backup_dir}/${DUMP}.1
    mv ${backup_dir}/${DUMP}.1 ${backup_dir}/${DUMP}

    info "all done at $(date)\n"
}

main
